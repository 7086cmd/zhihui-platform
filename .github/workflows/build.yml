name: Build App

on:
  workflow_dispatch:
    branches: [main]

jobs:
  windows:
    runs-on: [windows-latest]

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependences
        run: pnpm install
      - name: Build Front End
        run: "pnpm run build::page"
      - name: Build Front End Client Script
        run: "pnpm run build::client"
      - name: Build Front End Client App
        run: "pnpm run build::app"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build Back End
        run: "cargo build --release -q"
      - uses: actions/setup-python@v1
        with:
          python-version: 3.10.4
      - name: Install PyInstaller
        run: pip install pyinstaller
      - name: Build Back End Socket
        run: pyinstaller --onefile --name=socket.exe packages/back/socket/src/main.py
      - name: Handle Back End File
        run: "pnpm run handle"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/backend.zip
          asset_name: backend.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/backend.tar.gz
          asset_name: backend.tar.gz
          asset_content_type: application/gzip
